apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: app-namespace
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: pv-backend 
          mountPath: /app
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: configmap-backend
              key: database-url
        - name: logging
          valueFrom:
            configMapKeyRef:
              name: configmap-backend
              key: logging
      volumes:
      - name: pv-backend 
        persistentVolumeClaim:
          claimName: pv-backend-claim
   

        

#Komendy do zadania na 3.5
#kubectl apply -f backend_deployments.yaml
#kubectl apply -f backend_service.yaml
#minikube service backend-service
#kubectl delete deployments --all
#kubectl delete services backend-service

#Komendy do zadania na 4.0
#kubectl create namespace app-namespace
#kubectl config set-context --current --namespace=app-namespace
#kubectl apply -f backend_deployments.yaml
#kubectl apply -f backend_service.yaml
#minikube service backend-service -n app-namespace

#Komendy do zadania na 5.0
#kubectl create namespace app-namespace
#kubectl config set-context --current --namespace=app-namespace
#kubectl apply -f .
#kubectl get deployments
#kubectl get services
#minikube service backend-service -n app-namespace
